AWSTemplateFormatVersion: '2010-09-09'
Description: AnswerKing API
Transform: AWS::Serverless-2016-10-31

Globals:
  Api:
    Name: AnswerKingApi
    Auth:
      ApiKeyRequired: true

Parameters:
  DeployedByTag:
    Description: Standard deploy tag
    Type: String
    Default: Muaaz

Resources:
  AnswerKingApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: AnswerKingApi
      StageName: Prod
      Auth:
        ApiKeyRequired: true

  BasicUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: BasicPlan
      ApiStages:
        - ApiId: !Ref AnswerKingApi
          Stage: Prod
      Throttle:
        RateLimit: 10
        BurstLimit: 5
      Description: Basic usage plan with API key

  MuaazApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: Muaaz-Key
      Enabled: true
      StageKeys:
        - RestApiId: !Ref AnswerKingApi
          StageName: Prod

  MuaazApiKeyUsagePlanAttachment:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref MuaazApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref BasicUsagePlan

  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: answerking-common-layer
      Description: Shared utilities for AnswerKing
      ContentUri: layers/common
      CompatibleRuntimes:
        - python3.13

  CreateCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Categories/create_category.lambda_handler
      Runtime: python3.13
      Events:
        CreateCategoryAPI:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /categories
            Method: POST
      Policies:
        - DynamoDBWritePolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

  CreateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Items/create_item.lambda_handler
      Runtime: python3.13
      Events:
        CreateItemAPI:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /items
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

  ViewItemsByCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Categories/view_items_by_category.lambda_handler
      Runtime: python3.13
      Events:
        ApiGetItemsByCategory:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /categories/{category_id}/items
            Method: GET
      Policies:
        - DynamoDBReadPolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

  ViewAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Items/view_items.lambda_handler
      Runtime: python3.13
      Events:
        ApiGetItems:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /items
            Method: GET
      Policies:
        - DynamoDBReadPolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

  DeleteItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Items/delete_items.lambda_handler
      Runtime: python3.13
      Events:
        DeleteItemAPI:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /items/{item_id}
            Method: DELETE
      Policies:
        - DynamoDBCrudPolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

  DeleteCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Categories/delete_category.lambda_handler
      Runtime: python3.13
      Events:
        DeleteCategoryAPI:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /categories/{category_id}
            Method: DELETE
      Policies:
        - DynamoDBCrudPolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

  ViewAllCategoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Categories/view_categories.lambda_handler
      Runtime: python3.13
      Events:
        ApiGetCategories:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /categories
            Method: GET
      Policies:
        - DynamoDBReadPolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

  UpdateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Items/update_item.lambda_handler
      Runtime: python3.13
      Events:
        UpdateItemAPI:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /items/{item_id}
            Method: PUT
      Policies:
        - DynamoDBCrudPolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

  UpdateCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Categories/update_category.lambda_handler
      Runtime: python3.13
      Events:
        UpdateCategoryAPI:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /categories/{category_id}
            Method: PUT
      Policies:
        - DynamoDBCrudPolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

  CreateOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Orders/create_order.lambda_handler
      Runtime: python3.13
      Events:
        CreateOrderAPI:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /orders
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

  UpdateOrderItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Orders/update_order_items.lambda_handler
      Runtime: python3.13
      Events:
        PatchOrderItemsAPI:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApi
            Path: /orders/{order_id}
            Method: PUT
      Policies:
        - DynamoDBCrudPolicy:
            TableName: AnswerKingDB
      Layers:
        - !Ref CommonLayer
      Tags:
        Project: AnswerKing
        deployed-by: !Ref DeployedByTag

Outputs:
  CreateCategoryApiUrl:
    Description: "API Gateway endpoint URL for creating categories // POST"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categories"

  CreateItemApiUrl:
    Description: "API Gateway endpoint URL for creating items // POST"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/items"

  GetItemsByCategoryApiUrl:
    Description: "API Gateway endpoint URL for viewing items by category // GET"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categories/{category_id}/items"

  GetItemsApiUrl:
    Description: "API Gateway endpoint URL for viewing all items // GET"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/items"

  DeleteItemApiUrl:
    Description: "API Gateway endpoint URL for deleting item // DELETE"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/items/{item_id}"

  DeleteCategoryApiUrl:
    Description: "API Gateway endpoint URL for deleting category // DELETE"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categories/{category_id}"

  ViewAllCategoriesApiUrl:
    Description: "API Gateway endpoint URL for viewing all categories // GET"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categories"

  UpdateItemApiUrl:
    Description: "API Gateway endpoint URL for update item // PUT"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/items/{item_id}"

  UpdateCategoryApiUrl:
    Description: "API Gateway endpoint URL for updating category // PUT"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/categories/{category_id}"

  CreateOrderApiUrl:
    Description: "API Gateway endpoint URL for creating orders // POST"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/orders"

  UpdateOrderItemsApiUrl:
    Description: "API Gateway endpoint URL for update order items // PUT"
    Value: !Sub "https://${AnswerKingApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/orders/{order_id}"
